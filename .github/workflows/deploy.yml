name: Notepad EC2 Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. 빌드 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. GitHub Actions 퍼블릭 IP 획득
      - name: Get GitHub Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      # 6. AWS 설정
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 7. EC2 보안 그룹에 SSH 허용 (임시)
      - name: Add IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-name notepad-secure \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # 8. 빌드된 JAR 파일 EC2로 전송
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/notepad-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/memo-notepad"
          overwrite: true

      # 9. EC2에서 애플리케이션 재시작
      - name: Restart App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "> deploy.sh 실행"
            ./memo-notepad/deploy.sh

      # 10. SSH 허용 IP 제거 (보안)
      - name: Remove IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-name notepad-secure \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32